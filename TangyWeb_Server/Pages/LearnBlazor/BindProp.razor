@page "/LearnBlazor/BindProp"

<h3 class="text-success">Individual Product</h3>
<div class="row">

    <div class="col-6   border p-3">
        <h3 class="text-primary">Product Playground</h3> <hr />
        <div>
            Active : <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive?"checked":null)" /><br />
        </div>
        <div>
            <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /> <br />
        </div>
        <div>
            Product Properties :
            <select @bind="@selectedProperty">
                @foreach (var product in @product.ProductProperties)
                {
                    <option value="@product.Key">@product.Key</option>
                }
            </select>
        </div>
    </div>
    <div class=" col-6  border p-3">


        <h3 class="text-primary">Product</h3> <hr />

        Name : @product.Name <br />
        Active :  @product.IsActive   <br />
        price : @product.Price <br />
        This product is : @(product.IsActive?"Active":"In Active") <br />
        Property Selected : @selectedProperty
        <br />

        @if (!String.IsNullOrWhiteSpace(selectedProperty))
        {
            <p>Property Value : @product.ProductProperties.FirstOrDefault(x=> x.Key == selectedProperty).Value </p>
        }

    </div>


</div>

<h3 class="text-success">Product Table</h3>
<div class="row">
    
    <table class="table">
        
       
        @foreach(var item in products)
        {
            <tr>
             <td><input type ="text"   @bind-value="@item.Name" @bind-value:event="oninput" /></td>
            <td><input type ="text"    @bind-value="@item.Price" @bind-value:event="oninput" /></td>
            <td><input type ="checkbox" @bind-value="@item.IsActive"  checked="@(item.IsActive? "checked" : null)" /></td>
            </tr>
        }

        
        
       
    </table>
</div>

<h3 class="text-success">Product Value</h3>
<div class="row">
    
    <table class="table">
        
        
        @foreach(var item in products)
        {
              <tr>  
             <td> <span>Product Name : @item.Name [@item.Price] Is Active : @item.IsActive </span></td>
            </tr>
        }

               
       
    </table>
</div>



@code {
    private string selectedProperty = string.Empty;
    Demo_Product product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 200,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp(){Id=1,Key="Color",Value="Black"},
                new Demo_ProductProp(){Id=2,Key="Flavor",Value="Rose Jasmine"},
                new Demo_ProductProp(){Id=3,Key="Size",Value="12oz"}
            }

        };

    List<Demo_Product> products = new();

    protected override void OnInitialized()
    {
        products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
                },
                Price =12321
            });

        products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
                },
                Price =12321
            });

    }
}
